// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/health": {
            "get": {
                "description": "Returns the API status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check the health of the API",
                "responses": {
                    "200": {
                        "description": "API is up and running",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/sound": {
            "get": {
                "description": "Retrieves all sounds from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sounds"
                ],
                "summary": "Get all sounds",
                "responses": {
                    "200": {
                        "description": "List of all sounds",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.SoundResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new sound to the database with detailed properties and an audio file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sounds"
                ],
                "summary": "Create a sound",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the sound",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of the sound; valid values are 'background' or 'session'.",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tier of the sound; valid values are 'free' or 'premium'.",
                        "name": "tier",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Duration of the sound in seconds; must be a positive integer.",
                        "name": "duration",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description of the sound; optional but useful for additional context.",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Audio file for the sound; required and must be in an acceptable audio format.",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sound created successfully with details in the response body.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input data with detailed error message.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Name conflict; the specified sound name already exists.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error; something went wrong on the server.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/sound/{id}": {
            "get": {
                "description": "Retrieves a sound by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sounds"
                ],
                "summary": "Get a single sound",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of the sound to retrieve",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the sound",
                        "schema": {
                            "$ref": "#/definitions/models.Sound"
                        }
                    },
                    "404": {
                        "description": "Sound not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the properties of an existing sound identified by its UUID, except the sound file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sounds"
                ],
                "summary": "Update a sound",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of the sound to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New name of the sound",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "New type of the sound; valid values are 'background' or 'session'.",
                        "name": "type",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "New tier of the sound; valid values are 'free' or 'premium'.",
                        "name": "tier",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "New duration of the sound in seconds; must be a positive integer if provided.",
                        "name": "duration",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "New description of the sound; optional and can provide additional context.",
                        "name": "description",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sound updated successfully with message indicating successful update.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data with detailed error message.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Sound not found if no sound matches the provided UUID.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error if something goes wrong on the server side.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a sound by UUID and removes the associated file from S3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sounds"
                ],
                "summary": "Delete a sound",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of the sound to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sound deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Sound not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete sound or associated file",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "handlers.SoundResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tier": {
                    "description": "'free' or 'premium'",
                    "type": "string"
                },
                "type": {
                    "description": "'background' or 'session'",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.Sound": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "duration in seconds",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tier": {
                    "description": "'free' or 'premium'",
                    "type": "string"
                },
                "type": {
                    "description": "'background' or 'session'",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
